---
title: "working_with_text"
format: html
editor: visual
---

# Text analysis

In this tutorial we are going to start working with the text that we scraped last time. We will take the tidy approach to text analysis because it is fairly intuitive in that it treats text as data frames for analysis.

Furthermore, the text converted into a data frame can be converted to a variety of formats that allow it to be analyzed by other popular ra programs such as quanteda. While the examples are different and we won't cover all of the topics in the book you can find much of this material in [**Text Mining with R**](https://www.tidytextmining.com/index.html "A Tidy Approach")**: A Tidy Approach** listed in the syllabus

## A Corpus

For our analysis we need text. The raw text is the corpus that we work on. The corpus that we are interested in varies depending on our researh objectives. For example, a corpus can contain a newspaper article, multiple articles, tweets about a particular topic or from a group of people. How we put together the relevant corpus depends on the objective of our analysis.

As an example, here we will use the newspaper article that we scraped.


The first step is to load the data that we saved in the last project. It was saved as an R Object, so we can load it the following way:

```{r}
para <- load("paragraphs.rdata")
```

This loads the saved R data object into our working environment to allow us to begin working with the data.

## Cleaning the Data

We now need to work on cleaning the data to render it into a format that we can use for text analysis. For this tutorial, we will be using the tidyverse text analysis method so begin by loading the tidytext package and installing it if not installed yet.

```{r}
# install.packages("tidytext")
library(tidytext)
```

There are a few other packages that also make text analysis easier:

```{r}
library(dplyr)
library(stringr)
```


Now we can begin to work with the data and transform it into something usable.

Begin by tokenizing the data, or separating the paragraphs and sentences into words instead of the format they are currently in.








